{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EGOIST\\\\Documents\\\\COOKING\\\\IDEATHON-PS10\\\\src\\\\components\\\\Sparkline.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sparkline = ({\n  data,\n  color = \"#3b82f6\",\n  width = 60,\n  height = 20,\n  strokeWidth = 2,\n  showDots = false,\n  showArea = true,\n  trend = 'stable',\n  className = \"\"\n}) => {\n  if (!data || data.length < 2) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex items-center justify-center text-xs text-gray-400 ${className}`,\n      style: {\n        width,\n        height\n      },\n      children: \"No data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Calculate SVG viewBox and path\n  const min = Math.min(...data);\n  const max = Math.max(...data);\n  const range = max - min || 1;\n  const points = data.map((value, index) => {\n    const x = index / (data.length - 1) * width;\n    const y = height - (value - min) / range * height;\n    return `${x},${y}`;\n  }).join(' ');\n  const pathData = `M ${points}`;\n\n  // Create area fill path\n  const areaPathData = `M ${points} L ${width},${height} L 0,${height} Z`;\n\n  // Get trend color\n  const getTrendColor = () => {\n    switch (trend) {\n      case 'up':\n        return '#10b981';\n      case 'down':\n        return '#ef4444';\n      default:\n        return '#6b7280';\n    }\n  };\n\n  // Get trend icon\n  const getTrendIcon = () => {\n    switch (trend) {\n      case 'up':\n        return '↗️';\n      case 'down':\n        return '↘️';\n      default:\n        return '➡️';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `relative ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      width: width,\n      height: height,\n      viewBox: `0 0 ${width} ${height}`,\n      className: \"overflow-visible\",\n      children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"pattern\", {\n          id: \"grid\",\n          width: \"10\",\n          height: \"10\",\n          patternUnits: \"userSpaceOnUse\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M 10 0 L 0 0 0 10\",\n            fill: \"none\",\n            stroke: \"#f3f4f6\",\n            strokeWidth: \"0.5\",\n            opacity: \"0.3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n        width: \"100%\",\n        height: \"100%\",\n        fill: \"url(#grid)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), showArea && /*#__PURE__*/_jsxDEV(\"path\", {\n        d: areaPathData,\n        fill: `${color}20`,\n        opacity: \"0.3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathData,\n        stroke: color,\n        strokeWidth: strokeWidth,\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), showDots && data.map((value, index) => {\n        const x = index / (data.length - 1) * width;\n        const y = height - (value - min) / range * height;\n        return /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: x,\n          cy: y,\n          r: \"2\",\n          fill: color,\n          className: \"animate-pulse\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: width - 5,\n        cy: 5,\n        r: \"8\",\n        fill: getTrendColor(),\n        opacity: \"0.8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        x: width - 5,\n        y: \"8\",\n        textAnchor: \"middle\",\n        fontSize: \"8\",\n        fill: \"white\",\n        fontWeight: \"bold\",\n        children: getTrendIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap\",\n      children: [\"Trend: \", trend, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = Sparkline;\nexport default Sparkline;\nvar _c;\n$RefreshReg$(_c, \"Sparkline\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Sparkline","data","color","width","height","strokeWidth","showDots","showArea","trend","className","length","style","children","fileName","_jsxFileName","lineNumber","columnNumber","min","Math","max","range","points","map","value","index","x","y","join","pathData","areaPathData","getTrendColor","getTrendIcon","viewBox","id","patternUnits","d","fill","stroke","opacity","strokeLinecap","strokeLinejoin","cx","cy","r","textAnchor","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/EGOIST/Documents/COOKING/IDEATHON-PS10/src/components/Sparkline.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst Sparkline = ({ \r\n  data, \r\n  color = \"#3b82f6\", \r\n  width = 60, \r\n  height = 20, \r\n  strokeWidth = 2,\r\n  showDots = false,\r\n  showArea = true,\r\n  trend = 'stable',\r\n  className = \"\"\r\n}) => {\r\n  if (!data || data.length < 2) {\r\n    return (\r\n      <div \r\n        className={`flex items-center justify-center text-xs text-gray-400 ${className}`}\r\n        style={{ width, height }}\r\n      >\r\n        No data\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Calculate SVG viewBox and path\r\n  const min = Math.min(...data);\r\n  const max = Math.max(...data);\r\n  const range = max - min || 1;\r\n  \r\n  const points = data.map((value, index) => {\r\n    const x = (index / (data.length - 1)) * width;\r\n    const y = height - ((value - min) / range) * height;\r\n    return `${x},${y}`;\r\n  }).join(' ');\r\n\r\n  const pathData = `M ${points}`;\r\n  \r\n  // Create area fill path\r\n  const areaPathData = `M ${points} L ${width},${height} L 0,${height} Z`;\r\n\r\n  // Get trend color\r\n  const getTrendColor = () => {\r\n    switch (trend) {\r\n      case 'up': return '#10b981';\r\n      case 'down': return '#ef4444';\r\n      default: return '#6b7280';\r\n    }\r\n  };\r\n\r\n  // Get trend icon\r\n  const getTrendIcon = () => {\r\n    switch (trend) {\r\n      case 'up': return '↗️';\r\n      case 'down': return '↘️';\r\n      default: return '➡️';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      <svg \r\n        width={width} \r\n        height={height} \r\n        viewBox={`0 0 ${width} ${height}`}\r\n        className=\"overflow-visible\"\r\n      >\r\n        {/* Background grid lines */}\r\n        <defs>\r\n          <pattern id=\"grid\" width=\"10\" height=\"10\" patternUnits=\"userSpaceOnUse\">\r\n            <path d=\"M 10 0 L 0 0 0 10\" fill=\"none\" stroke=\"#f3f4f6\" strokeWidth=\"0.5\" opacity=\"0.3\"/>\r\n          </pattern>\r\n        </defs>\r\n        \r\n        {/* Grid background */}\r\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#grid)\" />\r\n        \r\n        {/* Area fill */}\r\n        {showArea && (\r\n          <path\r\n            d={areaPathData}\r\n            fill={`${color}20`}\r\n            opacity=\"0.3\"\r\n          />\r\n        )}\r\n        \r\n        {/* Line */}\r\n        <path\r\n          d={pathData}\r\n          stroke={color}\r\n          strokeWidth={strokeWidth}\r\n          fill=\"none\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n        \r\n        {/* Data points */}\r\n        {showDots && data.map((value, index) => {\r\n          const x = (index / (data.length - 1)) * width;\r\n          const y = height - ((value - min) / range) * height;\r\n          return (\r\n            <circle\r\n              key={index}\r\n              cx={x}\r\n              cy={y}\r\n              r=\"2\"\r\n              fill={color}\r\n              className=\"animate-pulse\"\r\n            />\r\n          );\r\n        })}\r\n        \r\n        {/* Trend indicator */}\r\n        <circle\r\n          cx={width - 5}\r\n          cy={5}\r\n          r=\"8\"\r\n          fill={getTrendColor()}\r\n          opacity=\"0.8\"\r\n        />\r\n        <text\r\n          x={width - 5}\r\n          y=\"8\"\r\n          textAnchor=\"middle\"\r\n          fontSize=\"8\"\r\n          fill=\"white\"\r\n          fontWeight=\"bold\"\r\n        >\r\n          {getTrendIcon()}\r\n        </text>\r\n      </svg>\r\n      \r\n      {/* Hover tooltip */}\r\n      <div className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs px-2 py-1 rounded opacity-0 group-hover:opacity-100 transition-opacity duration-200 pointer-events-none whitespace-nowrap\">\r\n        Trend: {trend}\r\n        <div className=\"absolute top-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-t-4 border-transparent border-t-gray-900\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sparkline;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}